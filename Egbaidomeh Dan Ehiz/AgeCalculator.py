{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "869d7d44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2021-11-07\n",
      "Enter your name2009\n",
      "Enter your birth year2009\n",
      "Enter your birth month01\n",
      "Enter your birth day01\n",
      "Hello 2009 you are  12 Years 10 Months and 36 Days old \n",
      "     Your year of birth is 2009\n",
      "     As you are 12 years old, you are a teen\n",
      "     In year 2000, you were you werent born \n",
      "     In year 2064, you will be 55 years old \n",
      "     In year 2074 you will be 65 years old\n"
     ]
    }
   ],
   "source": [
    "# import date from date module\n",
    "from datetime import date\n",
    "y = date.today().year\n",
    "m = date.today().month\n",
    "d = date.today().day\n",
    "print (date.today())\n",
    "\n",
    "# enter input message prompting user for inputs\n",
    "name = str(input('Enter your name'))\n",
    "year = int(input('Enter your birth year'))\n",
    "month = int(input('Enter your birth month'))\n",
    "day = int(input('Enter your birth day'))\n",
    "\n",
    "# Age classification\n",
    "infant = list(range(0,2))\n",
    "children = list(range(2,12))\n",
    "teens = list(range(11,18))\n",
    "adult = list(range(17,65))\n",
    "older_adult = list(range(65,120))\n",
    "\n",
    "# create an age function\n",
    "def age_class(age):\n",
    "    if age in infant: return 'an infant'\n",
    "    elif age in children: return 'in 7th grade'\n",
    "    elif age in teens: return 'a teen'\n",
    "    elif age in adult: return 'an adult'\n",
    "    elif age in older_adult: return ' an older_adult'\n",
    "\n",
    "# find out the difference btw these dates using 'if' function\n",
    "# Since birth month lesser than today's month, means you have added a new year.\n",
    "# hence, year doesnt reduce by 1, and birthday is deducted from todays' month\n",
    "\n",
    "if day> d and month >= m:\n",
    "    dd = (d + 30) - day\n",
    "    mm = ((m - 1) + 12) - month\n",
    "    yy = (y - 1) - year\n",
    "    year_2000 = (2000)\n",
    "    year_2064 = (2064)\n",
    "    year_2074 = (2074)\n",
    "    y2000 = year_2000 - year\n",
    "    y2064 = year_2064 - year\n",
    "    y2074 = year_2074 - year\n",
    "    print('Hello ' + name + ' ' + 'you are '+' '+str(yy) +' Years'+' ' + str(mm) + ' Months'+' and '+str(dd) +' Days old \\n \\\n",
    "    Your year of birth is '+str(year)+ '\\n \\\n",
    "    As you are '+ str(yy)+ ' years old, you are ' + age_class(yy) + '\\n \\\n",
    "    In year 2000, you were ' + str(y2000) + ' years old\\n \\\n",
    "    In year 2064, you will be ' + str(y2064) + ' years old\\n \\\n",
    "    In year 2074 you will be ' + str(y2074) + ' years old'\n",
    "                          )\n",
    "            \n",
    "\n",
    "        \n",
    "# Since birth month is higher than today's month, it means you havent added a new year,\n",
    "# hence year reduces with 1.  \n",
    "\n",
    "elif day> d and month < m:\n",
    "    dd = (d + 30) - day\n",
    "    mm = m - month\n",
    "    yy = y - year\n",
    "    year_2000 = (2000)\n",
    "    year_2064 = (2064)\n",
    "    year_2074 = (2074)\n",
    "    y2000 = year_2000 - year\n",
    "    y2064 = year_2064 - year\n",
    "    y2074 = year_2074 - year   \n",
    "    print('Hello ' + name + ' ' + 'you are '+' '+str(yy) +' Years'+' ' + str(mm) + ' Months'+' and '+str(dd) +' Days old \\n \\\n",
    "    Your year of birth is '+str(year)+ '\\n \\\n",
    "    As you are '+ str(yy)+ ' years old, you are ' + age_class(yy) + '\\n \\\n",
    "    In year 2000, you were ' + str(y2000) + ' years old \\n \\\n",
    "    In year 2064, you will be ' + str(y2064) + ' years old \\n \\\n",
    "    In year 2074 you will be ' + str(y2074) + ' years old'\n",
    "                          )\n",
    "\n",
    "elif day< d and month > m:\n",
    "    dd = d - day\n",
    "    mm = (m + 12) - month\n",
    "    yy = (y - 1) - year\n",
    "    year_2000 = (2000)\n",
    "    year_2064 = (2064)\n",
    "    year_2074 = (2074)\n",
    "    y2000 = year_2000 - year\n",
    "    y2064 = year_2064 - year\n",
    "    y2074 = year_2074 - year   \n",
    "    print('Hello ' + name + ' ' + 'you are '+' '+str(yy) +' Years'+' ' + str(mm) + ' Months'+' and '+str(dd) +' Days old \\n \\\n",
    "    Your year of birth is '+str(year)+ '\\n \\\n",
    "    As you are '+ str(yy)+ ' years old, you are ' + age_class(yy) + '\\n \\\n",
    "    In year 2000, you were ' + str(y2000) + ' years old \\n \\\n",
    "    In year 2064, you will be ' + str(y2064) + ' years old \\n \\\n",
    "    In year 2074 you will be ' + str(y2074) + ' years old'\n",
    "                          )\n",
    "\n",
    "elif day< d and month < m:\n",
    "    dd = (d + 30) - day\n",
    "    mm = m - month\n",
    "    yy = y - year\n",
    "    year_2000 = (2000)\n",
    "    year_2064 = (2064)\n",
    "    year_2074 = (2074)\n",
    "    y2000 = year_2000 - year\n",
    "    y2064 = year_2064 - year\n",
    "    y2074 = year_2074 - year   \n",
    "    print('Hello ' + name + ' ' + 'you are '+' '+str(yy) +' Years'+' ' + str(mm) + ' Months'+' and '+str(dd) +' Days old \\n \\\n",
    "    Your year of birth is '+str(year)+ '\\n \\\n",
    "    As you are '+ str(yy)+ ' years old, you are ' + age_class(yy) + '\\n \\\n",
    "    In year 2000, you were ' + 'you werent born \\n \\\n",
    "    In year 2064, you will be ' + str(y2064) + ' years old \\n \\\n",
    "    In year 2074 you will be ' + str(y2074) + ' years old'\n",
    "                          )\n",
    "\n",
    "else: \n",
    "    y < year\n",
    "    print(' dear user, calm down, this only applies to the living. \\n \\\n",
    "    You dont even know your name yet. you this unborn child') \n",
    "\n",
    "\n",
    " \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0612a8d0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
